version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    env_file:
      - .env.local
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
      - NEXT_WEBPACK_USEPOLLING=1
      - NEXT_PUBLIC_FORCE_REBUILD=true
    ports:
      - "3000:3000"
    volumes:
      - ./:/app:delegated
      - /app/node_modules
      - /app/.next
      - shared-tmp:/app/tmp
    networks:
      - app_network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: npm run dev
    stdin_open: true
    tty: true

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    volumes:
      - ./worker:/app
      - /app/node_modules
      - shared-tmp:/app/tmp
    env_file:
      - ./worker/.env
    environment:
      - NODE_ENV=development
    networks:
      - app_network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - app
    command: npm run dev

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - app
    networks:
      - app_network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"


  watcher:
    build: 
      context: ./watcher
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
    env_file:
      - ./watcher/.env
    volumes:
      - ./watcher:/app
      - /app/node_modules
    networks:
      - app_network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "host.docker.internal:54321"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    command: npm run dev

networks:
  app_network:
    driver: bridge

volumes:
  shared-tmp: